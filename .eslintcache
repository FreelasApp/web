[{"/media/keven/Data/www/freelasapp-web/src/index.tsx":"1","/media/keven/Data/www/freelasapp-web/src/App.tsx":"2","/media/keven/Data/www/freelasapp-web/src/Routes/index.tsx":"3","/media/keven/Data/www/freelasapp-web/src/styles/Global.ts":"4","/media/keven/Data/www/freelasapp-web/src/components/Input/index.tsx":"5","/media/keven/Data/www/freelasapp-web/src/components/Input/styles.ts":"6","/media/keven/Data/www/freelasapp-web/src/pages/SignUp/index.tsx":"7","/media/keven/Data/www/freelasapp-web/src/pages/SignIn/index.tsx":"8","/media/keven/Data/www/freelasapp-web/src/pages/SignUp/styles.ts":"9","/media/keven/Data/www/freelasapp-web/src/pages/SignIn/styles.ts":"10","/media/keven/Data/www/freelasapp-web/src/service/clientApi.ts":"11","/media/keven/Data/www/freelasapp-web/src/Hooks/AuthContext.tsx":"12","/media/keven/Data/www/freelasapp-web/src/Hooks/index.tsx":"13","/media/keven/Data/www/freelasapp-web/src/Hooks/ToastContext.tsx":"14","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/index.tsx":"15","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/styles.ts":"16","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/index.tsx":"17","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/styles.ts":"18","/media/keven/Data/www/freelasapp-web/src/utils/getValidatorErros.ts":"19","/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/index.tsx":"20","/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/styles.ts":"21","/media/keven/Data/www/freelasapp-web/src/Routes/Route.tsx":"22","/media/keven/Data/www/freelasapp-web/src/components/Project/index.tsx":"23","/media/keven/Data/www/freelasapp-web/src/components/Project/styles.ts":"24","/media/keven/Data/www/freelasapp-web/src/pages/Freela/index.tsx":"25","/media/keven/Data/www/freelasapp-web/src/pages/Freela/styles.ts":"26","/media/keven/Data/www/freelasapp-web/src/components/Contact/index.tsx":"27","/media/keven/Data/www/freelasapp-web/src/components/Contact/styles.ts":"28","/media/keven/Data/www/freelasapp-web/src/utils/formatValue.ts":"29","/media/keven/Data/www/freelasapp-web/src/pages/Profile/index.tsx":"30","/media/keven/Data/www/freelasapp-web/src/pages/Profile/styles.ts":"31","/media/keven/Data/www/freelasapp-web/src/pages/ProfileEdit/index.tsx":"32","/media/keven/Data/www/freelasapp-web/src/pages/ProfileEdit/styles.ts":"33","/media/keven/Data/www/freelasapp-web/src/utils/formatName.ts":"34","/media/keven/Data/www/freelasapp-web/src/utils/formatDate.ts":"35","/media/keven/Data/www/freelasapp-web/src/pages/CreateProject/index.tsx":"36","/media/keven/Data/www/freelasapp-web/src/pages/CreateProject/styles.ts":"37","/media/keven/Data/www/freelasapp-web/src/pages/PublicProfile/index.tsx":"38","/media/keven/Data/www/freelasapp-web/src/pages/PublicProfile/styles.ts":"39"},{"size":199,"mtime":1610085678489,"results":"40","hashOfConfig":"41"},{"size":383,"mtime":1610515746337,"results":"42","hashOfConfig":"41"},{"size":1159,"mtime":1611758969496,"results":"43","hashOfConfig":"41"},{"size":628,"mtime":1610946464824,"results":"44","hashOfConfig":"41"},{"size":1266,"mtime":1611748565625,"results":"45","hashOfConfig":"41"},{"size":850,"mtime":1610515894301,"results":"46","hashOfConfig":"41"},{"size":4114,"mtime":1611706844232,"results":"47","hashOfConfig":"41"},{"size":2976,"mtime":1611274250159,"results":"48","hashOfConfig":"41"},{"size":1576,"mtime":1610085678492,"results":"49","hashOfConfig":"41"},{"size":1576,"mtime":1610085678491,"results":"50","hashOfConfig":"41"},{"size":98,"mtime":1610458146629,"results":"51","hashOfConfig":"41"},{"size":3382,"mtime":1611722712459,"results":"52","hashOfConfig":"41"},{"size":299,"mtime":1610515484515,"results":"53","hashOfConfig":"41"},{"size":1434,"mtime":1610515610919,"results":"54","hashOfConfig":"41"},{"size":743,"mtime":1610515621648,"results":"55","hashOfConfig":"41"},{"size":162,"mtime":1599758878502,"results":"56","hashOfConfig":"41"},{"size":1237,"mtime":1610515693212,"results":"57","hashOfConfig":"41"},{"size":1144,"mtime":1605921865342,"results":"58","hashOfConfig":"41"},{"size":325,"mtime":1610515739207,"results":"59","hashOfConfig":"41"},{"size":4766,"mtime":1611756791700,"results":"60","hashOfConfig":"41"},{"size":1959,"mtime":1611744937212,"results":"61","hashOfConfig":"41"},{"size":805,"mtime":1610860619809,"results":"62","hashOfConfig":"41"},{"size":3485,"mtime":1611759297563,"results":"63","hashOfConfig":"41"},{"size":2978,"mtime":1611718747995,"results":"64","hashOfConfig":"41"},{"size":2997,"mtime":1611755278176,"results":"65","hashOfConfig":"41"},{"size":2384,"mtime":1611753910706,"results":"66","hashOfConfig":"41"},{"size":706,"mtime":1610949379380,"results":"67","hashOfConfig":"41"},{"size":483,"mtime":1610967066650,"results":"68","hashOfConfig":"41"},{"size":171,"mtime":1610963559495,"results":"69","hashOfConfig":"41"},{"size":3432,"mtime":1611756848994,"results":"70","hashOfConfig":"41"},{"size":1973,"mtime":1611723892233,"results":"71","hashOfConfig":"41"},{"size":5150,"mtime":1611749308906,"results":"72","hashOfConfig":"41"},{"size":2603,"mtime":1611704775570,"results":"73","hashOfConfig":"41"},{"size":459,"mtime":1611628340084,"results":"74","hashOfConfig":"41"},{"size":203,"mtime":1611628558341,"results":"75","hashOfConfig":"41"},{"size":6096,"mtime":1611752068435,"results":"76","hashOfConfig":"41"},{"size":2969,"mtime":1611751093686,"results":"77","hashOfConfig":"41"},{"size":3944,"mtime":1611757975831,"results":"78","hashOfConfig":"41"},{"size":1973,"mtime":1611755531020,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1x5ihfn",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/keven/Data/www/freelasapp-web/src/index.tsx",[],["162","163","164","165","166"],"/media/keven/Data/www/freelasapp-web/src/App.tsx",[],"/media/keven/Data/www/freelasapp-web/src/Routes/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/styles/Global.ts",[],"/media/keven/Data/www/freelasapp-web/src/components/Input/index.tsx",["167"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useState,\n  useRef,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  value?: string;\n  error?: boolean;\n  icon?: React.ComponentType<IconBaseProps>;\n  setValue: React.Dispatch<React.SetStateAction<string | number | any>>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  icon: Icon,\n  error,\n  setValue,\n  style,\n  ...rest\n}) => {\n  const [isFocus, setIsfocus] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputFocus = useCallback(() => {\n    setIsfocus(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsfocus(false);\n\n    setIsFilled(!!inputRef.current?.value);\n    setValue(inputRef.current?.value || '');\n  }, [setValue]);\n\n  return (\n    <Container\n      isFocus={isFocus}\n      isFilled={isFilled}\n      error={error}\n      style={style}\n    >\n      {Icon && <Icon size={22} />}\n      <input\n        ref={inputRef}\n        {...rest}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n      />\n    </Container>\n  );\n};\n\nexport default Input;\n","/media/keven/Data/www/freelasapp-web/src/components/Input/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/SignUp/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/pages/SignIn/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/pages/SignUp/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/SignIn/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/service/clientApi.ts",[],"/media/keven/Data/www/freelasapp-web/src/Hooks/AuthContext.tsx",[],"/media/keven/Data/www/freelasapp-web/src/Hooks/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/Hooks/ToastContext.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/utils/getValidatorErros.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/index.tsx",["168"],"/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/Routes/Route.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/Project/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/Project/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/Freela/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/pages/Freela/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/components/Contact/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/Contact/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/utils/formatValue.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/Profile/index.tsx",["169"],"/media/keven/Data/www/freelasapp-web/src/pages/Profile/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/ProfileEdit/index.tsx",["170","171","172","173","174"],"import React, { useCallback, useState } from 'react';\nimport * as yup from 'yup';\nimport { FiArrowLeft, FiUser, FiCamera } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\nimport { useAuthContext } from '../../Hooks/AuthContext';\nimport { useToast } from '../../Hooks/ToastContext';\nimport Input from '../../components/Input';\nimport clientApi from '../../service/clientApi';\nimport getValidatorErros from '../../utils/getValidatorErros';\n\nimport { Container, Header, Content } from './styles';\n\nconst ProfileEdit: React.FC = () => {\n  const { user, updateUser } = useAuthContext();\n  const { addToast } = useToast();\n  const [email, setEmail] = useState(user.email);\n  const [firstName, setFirstName] = useState(user.firstName);\n  const [lastName, setLastName] = useState(user.lastName);\n  const [description, setDescription] = useState('');\n\n  const [isFocushedDescription, setIsFocushedDescription] = useState(false);\n\n  const [errorLastNameInput, setErrorLastNameInput] = useState(false);\n  const [firstNameInputError, setFirstNameInputError] = useState(false);\n  const [lastNameInputError, setLastNameInputError] = useState(false);\n  const [emailInputError, setEmailInputError] = useState(false);\n\n  const history = useHistory();\n\n  const handleUpdadetAvatar = useCallback(\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\n      const formData = new FormData();\n\n      if (!e.target.files) {\n        addToast({\n          title: 'Erro ao atualizar o avatar',\n          type: 'error',\n        });\n      } else {\n        formData.append('avatar', e.target.files[0]);\n\n        const response = await clientApi.patch('profile/avatar', formData);\n\n        updateUser(response.data);\n      }\n    },\n    [addToast, updateUser],\n  );\n\n  const handleUpdadeUserProfile = useCallback(async () => {\n    try {\n      const formData = {\n        email,\n        firstName,\n        lastName,\n        description,\n      };\n\n      const schema = yup.object().shape({\n        firstName: yup.string().required('O Nome é obrigatorio'),\n        lastName: yup.string().required('O sobrenome é obrigatório'),\n        email: yup.string().required('O E-mail é obrigatório'),\n        description: yup.string().required('A descriptioné obrigatório'),\n      });\n\n      await schema.validate(formData, { abortEarly: false });\n\n      const response = await clientApi.post('/profile/update', formData);\n\n      updateUser(response.data);\n\n      addToast({\n        title: 'Sucesso ao atualizar o perfil.',\n        type: 'success',\n      });\n\n      history.goBack();\n    } catch (error) {\n      if (error instanceof yup.ValidationError) {\n        const errosFormated = getValidatorErros(error);\n        addToast({\n          type: 'error',\n          title: 'Erro ao atualizar o perfil.',\n          message: `Os campos: ${errosFormated} são obrigatóros`,\n        });\n      } else {\n        addToast({\n          type: 'error',\n          title: 'Erro ao atualizar o perfil.',\n          message:\n            'Ocorreu um erro atualizar o seu perfil, por favor tente novamente!',\n        });\n      }\n    }\n  }, [email, firstName, lastName, description, addToast, history, updateUser]);\n  return (\n    <Container>\n      <Header>\n        <button type=\"button\" onClick={() => history.goBack()}>\n          <FiArrowLeft size={28} />\n        </button>\n        <div>\n          <div>\n            <img src={user.avatar} alt=\"user avatar\" />\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n\n              <input type=\"file\" id=\"avatar\" onChange={handleUpdadetAvatar} />\n            </label>\n          </div>\n          <strong>{user.fullName}</strong>\n        </div>\n      </Header>\n      <Content isFocushedDescription={isFocushedDescription}>\n        <form>\n          <Input\n            value={firstName}\n            setValue={setFirstName}\n            error={firstNameInputError}\n            icon={FiUser}\n            name=\"fistName\"\n            placeholder=\"Nome\"\n            onChange={e => setFirstName(e.target.value)}\n          />\n          <Input\n            value={lastName}\n            setValue={setLastName}\n            icon={FiUser}\n            error={lastNameInputError}\n            name=\"lastName\"\n            placeholder=\"Sobrenome\"\n            onChange={e => setLastName(e.target.value)}\n          />\n          <Input\n            value={email}\n            setValue={setEmail}\n            error={emailInputError}\n            icon={FiUser}\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={e => setEmail(e.target.value)}\n          />\n          <div id=\"description\">\n            <textarea\n              name=\"description\"\n              placeholder=\"Descrição\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n              onFocus={() => setIsFocushedDescription(true)}\n              onBlur={() => setIsFocushedDescription(false)}\n            />\n          </div>\n\n          <button type=\"button\" onClick={handleUpdadeUserProfile}>\n            Salvar\n          </button>\n        </form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ProfileEdit;\n","/media/keven/Data/www/freelasapp-web/src/pages/ProfileEdit/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/utils/formatName.ts",[],"/media/keven/Data/www/freelasapp-web/src/utils/formatDate.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/CreateProject/index.tsx",["175","176","177","178","179"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  FiPower,\n  FiSearch,\n  FiPlus,\n  FiArrowLeft,\n  FiXCircle,\n} from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport { number } from 'yup';\nimport Logo from '../../assets/logo.png';\nimport Project from '../../components/Project';\nimport Contact from '../../components/Contact';\nimport clientApi from '../../service/clientApi';\nimport { useAuthContext } from '../../Hooks/AuthContext';\nimport { useToast } from '../../Hooks/ToastContext';\nimport formatDate from '../../utils/formatDate';\n\nimport { Container, Header, Content } from './styles';\nimport Input from '../../components/Input';\n\ninterface UserProps {\n  firstName: string;\n  lastName: string;\n  id: string;\n  avatar: string;\n}\n\ninterface CategorieProps {\n  name: string;\n}\n\ninterface ProjectsProps {\n  id: string;\n  title: string;\n  status: 'open' | 'in-progres' | 'concluded';\n  description: string;\n  price: number;\n  user: UserProps;\n  categories: CategorieProps[];\n  created_at: Date;\n}\n\nconst CreateProject: React.FC = () => {\n  const [projects, setProjects] = useState<ProjectsProps[]>([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [isFocushed, setIsFocushedDescription] = useState(false);\n  const [categories, setCategories] = useState<string[]>([]);\n  const [categorie, setCategorie] = useState('');\n  const [price, setPrice] = useState();\n\n  const { user, logout } = useAuthContext();\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSort = useCallback(\n    (item1: ProjectsProps, item2: ProjectsProps) => {\n      if (item1.price > item2.price) {\n        return 1;\n      }\n      return -1;\n    },\n    [],\n  );\n\n  const risingProjects = useMemo(() => {\n    const projectsSortd = projects.sort(handleSort);\n    return projectsSortd.filter(\n      (item, index) => index < 10 && item.status === 'open',\n    );\n  }, [projects, handleSort]);\n\n  useEffect(() => {\n    clientApi.get<ProjectsProps[]>('/freelas?status=open').then(response => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  const handleAddCategorie = useCallback(() => {\n    if (categories.length < 4 && !!categorie) {\n      setCategories([...categories, categorie.trim().toUpperCase()]);\n      setCategorie('');\n    }\n  }, [categories, categorie]);\n\n  const handleDeleteCategorie = useCallback(\n    cat => {\n      setCategories(categories.filter(item => item !== cat));\n    },\n    [categories],\n  );\n\n  const handleCreteProject = useCallback(async () => {\n    try {\n      const formData = {\n        title,\n        description,\n        categories: categories.reduce((acumulator, item, index) => {\n          if (index < categories.length - 1) {\n            return `${acumulator + item}, `;\n          }\n          return `${acumulator + item}`;\n        }, ''),\n        price: Number(price),\n      };\n\n      await clientApi.post('freelas', formData);\n      addToast({\n        type: 'success',\n        title: 'Projeto criando com sucesso.',\n      });\n    } catch (error) {\n      addToast({\n        type: 'error',\n        title: 'Ocorreu um erro ao criar um novo projto',\n      });\n    }\n  }, [title, description, categories, price, addToast]);\n  return (\n    <Container>\n      <Header>\n        <div>\n          <img src={Logo} alt=\"logo\" />\n          <button type=\"button\" onClick={() => history.goBack()}>\n            <FiArrowLeft size={28} />\n            <span>Voltar</span>\n          </button>\n        </div>\n        <div>\n          <button\n            id=\"user\"\n            type=\"button\"\n            onClick={() => {\n              history.push('/profile');\n            }}\n          >\n            <strong>{user.fullName}</strong>\n            <img src={user.avatar} alt=\"user avatar\" />\n          </button>\n          <button type=\"button\" onClick={logout}>\n            <FiPower size={28} />\n          </button>\n        </div>\n      </Header>\n      <Content isFocushedDescription={isFocushed}>\n        <form>\n          <text>\n            Cree um novo projeto e ajude outres pessoas a fazerem uma graninha\n          </text>\n          <div>\n            <Input name=\"Title\" setValue={setTitle} placeholder=\"Titulo\" />\n          </div>\n\n          <div id=\"description\">\n            <textarea\n              name=\"description\"\n              placeholder=\"Descrição\"\n              onChange={e => setDescription(e.target.value)}\n              onFocus={() => setIsFocushedDescription(true)}\n              onBlur={e => {\n                setIsFocushedDescription(false);\n                setDescription(e.target.value);\n              }}\n            />\n          </div>\n          <div>\n            <text>\n              Digite o valor que voçê está disposto a pagar por esse projeto\n            </text>\n            <Input name=\"price\" setValue={setPrice} placeholder=\"Valor\" />\n          </div>\n\n          <div className=\"addCategorie\">\n            <text>\n              Facilite a busca por seu projeto, adicione até 4 categorias.\n            </text>\n            <div>\n              <Input\n                name=\"categorie\"\n                value={categorie}\n                setValue={setCategorie}\n                placeholder=\"Categoria\"\n                onChange={e => setCategorie(e.target.value)}\n              />\n              <button type=\"button\" onClick={handleAddCategorie}>\n                <FiPlus size={28} />\n              </button>\n            </div>\n            <ul>\n              {categories.map(item => {\n                return (\n                  <li>\n                    <span>{item}</span>\n                    <FiXCircle\n                      size={22}\n                      onClick={() => handleDeleteCategorie(item)}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n\n          <button type=\"button\" onClick={handleCreteProject}>\n            Adicionar Projeto\n          </button>\n        </form>\n      </Content>\n      <Contact />\n    </Container>\n  );\n};\n\nexport default CreateProject;\n","/media/keven/Data/www/freelasapp-web/src/pages/CreateProject/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/PublicProfile/index.tsx",["180","181","182","183"],"/media/keven/Data/www/freelasapp-web/src/pages/PublicProfile/styles.ts",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":15,"column":67,"nodeType":"196","messageId":"197","endLine":15,"endColumn":70,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":70,"column":9,"nodeType":"201","messageId":"202","endLine":70,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":28},{"ruleId":"203","severity":1,"message":"207","line":23,"column":10,"nodeType":"205","messageId":"206","endLine":23,"endColumn":28},{"ruleId":"203","severity":1,"message":"208","line":23,"column":30,"nodeType":"205","messageId":"206","endLine":23,"endColumn":51},{"ruleId":"203","severity":1,"message":"209","line":24,"column":31,"nodeType":"205","messageId":"206","endLine":24,"endColumn":53},{"ruleId":"203","severity":1,"message":"210","line":25,"column":30,"nodeType":"205","messageId":"206","endLine":25,"endColumn":51},{"ruleId":"203","severity":1,"message":"211","line":26,"column":27,"nodeType":"205","messageId":"206","endLine":26,"endColumn":45},{"ruleId":"203","severity":1,"message":"212","line":4,"column":3,"nodeType":"205","messageId":"206","endLine":4,"endColumn":11},{"ruleId":"203","severity":1,"message":"213","line":11,"column":10,"nodeType":"205","messageId":"206","endLine":11,"endColumn":16},{"ruleId":"203","severity":1,"message":"214","line":13,"column":8,"nodeType":"205","messageId":"206","endLine":13,"endColumn":15},{"ruleId":"203","severity":1,"message":"215","line":18,"column":8,"nodeType":"205","messageId":"206","endLine":18,"endColumn":18},{"ruleId":"203","severity":1,"message":"216","line":68,"column":9,"nodeType":"205","messageId":"206","endLine":68,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":28},{"ruleId":"203","severity":1,"message":"217","line":2,"column":23,"nodeType":"205","messageId":"206","endLine":2,"endColumn":29},{"ruleId":"203","severity":1,"message":"218","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":70,"column":7,"nodeType":"201","messageId":"202","endLine":70,"endColumn":18},"lines-around-directive",["219"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["220","221"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'errorLastNameInput' is assigned a value but never used.","'setErrorLastNameInput' is assigned a value but never used.","'setFirstNameInputError' is assigned a value but never used.","'setLastNameInputError' is assigned a value but never used.","'setEmailInputError' is assigned a value but never used.","'FiSearch' is defined but never used.","'number' is defined but never used.","'Project' is defined but never used.","'formatDate' is defined but never used.","'risingProjects' is assigned a value but never used.","'FiEdit' is defined but never used.","'useAuthContext' is defined but never used.","padding-line-between-statements",{"messageId":"222","fix":"223","desc":"224"},{"messageId":"225","fix":"226","desc":"227"},"suggestUnknown",{"range":"228","text":"229"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"228","text":"230"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[409,412],"unknown","never"]