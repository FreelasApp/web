[{"/media/keven/Data/www/freelasapp-web/src/index.tsx":"1","/media/keven/Data/www/freelasapp-web/src/App.tsx":"2","/media/keven/Data/www/freelasapp-web/src/Routes/index.tsx":"3","/media/keven/Data/www/freelasapp-web/src/styles/Global.ts":"4","/media/keven/Data/www/freelasapp-web/src/components/Input/index.tsx":"5","/media/keven/Data/www/freelasapp-web/src/components/Input/styles.ts":"6","/media/keven/Data/www/freelasapp-web/src/pages/SignUp/index.tsx":"7","/media/keven/Data/www/freelasapp-web/src/pages/SignIn/index.tsx":"8","/media/keven/Data/www/freelasapp-web/src/pages/SignUp/styles.ts":"9","/media/keven/Data/www/freelasapp-web/src/pages/SignIn/styles.ts":"10","/media/keven/Data/www/freelasapp-web/src/service/clientApi.ts":"11","/media/keven/Data/www/freelasapp-web/src/Hooks/AuthContext.tsx":"12","/media/keven/Data/www/freelasapp-web/src/Hooks/index.tsx":"13","/media/keven/Data/www/freelasapp-web/src/Hooks/ToastContext.tsx":"14","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/index.tsx":"15","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/styles.ts":"16","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/index.tsx":"17","/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/styles.ts":"18","/media/keven/Data/www/freelasapp-web/src/utils/getValidatorErros.ts":"19","/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/index.tsx":"20","/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/styles.ts":"21","/media/keven/Data/www/freelasapp-web/src/components/Header/index.tsx":"22","/media/keven/Data/www/freelasapp-web/src/components/Header/styles.ts":"23","/media/keven/Data/www/freelasapp-web/src/Routes/Route.tsx":"24"},{"size":199,"mtime":1610085678489,"results":"25","hashOfConfig":"26"},{"size":383,"mtime":1610515746337,"results":"27","hashOfConfig":"26"},{"size":510,"mtime":1610804970919,"results":"28","hashOfConfig":"26"},{"size":594,"mtime":1610085678546,"results":"29","hashOfConfig":"26"},{"size":1214,"mtime":1610515888644,"results":"30","hashOfConfig":"26"},{"size":850,"mtime":1610515894301,"results":"31","hashOfConfig":"26"},{"size":4104,"mtime":1610802376008,"results":"32","hashOfConfig":"26"},{"size":2853,"mtime":1610802367590,"results":"33","hashOfConfig":"26"},{"size":1576,"mtime":1610085678492,"results":"34","hashOfConfig":"26"},{"size":1576,"mtime":1610085678491,"results":"35","hashOfConfig":"26"},{"size":98,"mtime":1610458146629,"results":"36","hashOfConfig":"26"},{"size":1775,"mtime":1610519265092,"results":"37","hashOfConfig":"26"},{"size":299,"mtime":1610515484515,"results":"38","hashOfConfig":"26"},{"size":1434,"mtime":1610515610919,"results":"39","hashOfConfig":"26"},{"size":743,"mtime":1610515621648,"results":"40","hashOfConfig":"26"},{"size":162,"mtime":1599758878502,"results":"41","hashOfConfig":"26"},{"size":1237,"mtime":1610515693212,"results":"42","hashOfConfig":"26"},{"size":1144,"mtime":1605921865342,"results":"43","hashOfConfig":"26"},{"size":325,"mtime":1610515739207,"results":"44","hashOfConfig":"26"},{"size":266,"mtime":1610802441974,"results":"45","hashOfConfig":"26"},{"size":150,"mtime":1610801382141,"results":"46","hashOfConfig":"26"},{"size":416,"mtime":1610802664293,"results":"47","hashOfConfig":"26"},{"size":80,"mtime":1610802280460,"results":"48","hashOfConfig":"26"},{"size":804,"mtime":1610804808522,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1x5ihfn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/keven/Data/www/freelasapp-web/src/index.tsx",[],["102","103","104","105","106"],"/media/keven/Data/www/freelasapp-web/src/App.tsx",[],"/media/keven/Data/www/freelasapp-web/src/Routes/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/styles/Global.ts",[],"/media/keven/Data/www/freelasapp-web/src/components/Input/index.tsx",["107"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useState,\n  useRef,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  error?: boolean;\n  icon: React.ComponentType<IconBaseProps>;\n  setValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  icon: Icon,\n  error,\n  setValue,\n  ...rest\n}) => {\n  const [isFocus, setIsfocus] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputFocus = useCallback(() => {\n    setIsfocus(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsfocus(false);\n\n    setIsFilled(!!inputRef.current?.value);\n    setValue(inputRef.current?.value || '');\n  }, []);\n  return (\n    <Container isFocus={isFocus} isFilled={isFilled} error={error}>\n      {Icon && <Icon size={22} />}\n      <input\n        // value={inputRef.current?.value}\n        ref={inputRef}\n        {...rest}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n      />\n    </Container>\n  );\n};\n\nexport default Input;\n","/media/keven/Data/www/freelasapp-web/src/components/Input/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/SignUp/index.tsx",["108"],"import React, { useState, useCallback, FormEvent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiMail, FiLock, FiLogOut } from 'react-icons/fi';\nimport * as yup from 'yup';\n\nimport Input from '../../components/Input';\nimport Logo from '../../assets/Logo.png';\nimport getValidatorErros from '../../utils/getValidatorErros';\nimport { useToast } from '../../Hooks/ToastContext';\n\nimport { Container, Content, Background } from './styles';\nimport clientApi from '../../service/clientApi';\n\nconst SignUp: React.FC = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [firstNameInputError, setFIrstNameInputError] = useState(false);\n  const [lastNameInputError, setLastNameInputError] = useState(false);\n  const [emailInputError, setEmailInputError] = useState(false);\n  const [passwordInputError, setPasswordInputError] = useState(false);\n\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmitForm = useCallback(\n    async (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n\n      try {\n        const data = {\n          firstName,\n          lastName,\n          email,\n          password,\n        };\n\n        const schema = yup.object().shape({\n          firstName: yup\n            .string()\n            .required('É necessário informar o primero nome'),\n          lastName: yup\n            .string()\n            .required('É necessário informar o seu sobrenome'),\n          email: yup.string().required('É necessário informar o email'),\n          password: yup.string().required('É necessário informar a senha'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await clientApi.post('/users', data);\n\n        addToast({\n          type: 'success',\n          title: 'Sucesso ao se cadastrar',\n          message:\n            ' O seu cadastro foi realizado com sucesso, você já pode realizar o seu login.',\n        });\n\n        history.goBack();\n      } catch (error) {\n        if (error instanceof yup.ValidationError) {\n          const errosFormated = getValidatorErros(error);\n\n          setFIrstNameInputError(!!errosFormated.firstName);\n          setLastNameInputError(!!errosFormated.lastName);\n          setEmailInputError(!!errosFormated.email);\n          setPasswordInputError(!!errosFormated.password);\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Erro ao realizar o cadastro',\n            message:\n              'Ocorreu um erro ao tentar seu cadastro, por favor tente novamente!',\n          });\n        }\n      }\n    },\n    [firstName, lastName, email, password, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <img src={Logo} alt=\"logo\" width=\"100px\" />\n        <form onSubmit={handleSubmitForm}>\n          <h1>Crie sua conta</h1>\n\n          <Input\n            type=\"text\"\n            name=\"firstName\"\n            placeholder=\"Nome\"\n            icon={FiMail}\n            setValue={setFirstName}\n            error={firstNameInputError}\n          />\n          <Input\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"Sobrenome\"\n            icon={FiMail}\n            setValue={setLastName}\n            error={lastNameInputError}\n          />\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"E-mail\"\n            icon={FiMail}\n            setValue={setEmail}\n            error={emailInputError}\n          />\n          <Input\n            type=\"password\"\n            name=\"passwor\"\n            placeholder=\"Senha\"\n            icon={FiLock}\n            setValue={setPassword}\n            error={passwordInputError}\n          />\n          <button type=\"submit\">Criar conta</button>\n        </form>\n\n        <Link to=\"/\">\n          <FiLogOut size={22} />\n          Voltar ao login\n        </Link>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/media/keven/Data/www/freelasapp-web/src/pages/SignIn/index.tsx",["109"],"import React, { useCallback, useState, FormEvent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiMail, FiLock, FiLogIn } from 'react-icons/fi';\nimport * as yup from 'yup';\nimport Input from '../../components/Input';\nimport Logo from '../../assets/logo.png';\nimport getValidatorErros from '../../utils/getValidatorErros';\nimport { useToast } from '../../Hooks/ToastContext';\nimport { useAuthContext } from '../../Hooks/AuthContext';\nimport { Container, Content, Background } from './styles';\n\nconst SignIn: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailInputError, setEmailInputError] = useState(false);\n  const [passwordInputError, setPasswordInputError] = useState(false);\n\n  const { addToast } = useToast();\n  const { login } = useAuthContext();\n  const history = useHistory();\n\n  const handleSubmitForm = useCallback(\n    async (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      try {\n        const data = {\n          email,\n          password,\n        };\n\n        const schema = yup.object().shape({\n          email: yup.string().required('É necessário informar o email'),\n          password: yup.string().required('É necessário informar a senha'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await login(data);\n\n        history.push('/dashboard');\n      } catch (error) {\n        if (error instanceof yup.ValidationError) {\n          const errosFormated = getValidatorErros(error);\n\n          setEmailInputError(!!errosFormated.email);\n          setPasswordInputError(!!errosFormated.password);\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Erro ao fazer login',\n            message:\n              'Ocorreu um erro ao tentar fazer login, por favor cheque suas credenciais e tente novamente!',\n          });\n        }\n      }\n    },\n    [email, password, addToast],\n  );\n  return (\n    <Container>\n      <Content>\n        <img src={Logo} alt=\"logo\" width=\"100px\" />\n        <form onSubmit={handleSubmitForm}>\n          <h1>Faça seu login</h1>\n\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"E-mail\"\n            icon={FiMail}\n            setValue={setEmail}\n            error={emailInputError}\n          />\n          <Input\n            type=\"password\"\n            name=\"passwor\"\n            placeholder=\"Senha\"\n            icon={FiLock}\n            setValue={setPassword}\n            error={passwordInputError}\n          />\n          <button type=\"submit\">Entrar</button>\n        </form>\n\n        <Link to=\"/sign-up\">\n          <FiLogIn size={22} />\n          Criar conta\n        </Link>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/media/keven/Data/www/freelasapp-web/src/pages/SignUp/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/SignIn/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/service/clientApi.ts",[],"/media/keven/Data/www/freelasapp-web/src/Hooks/AuthContext.tsx",[],"/media/keven/Data/www/freelasapp-web/src/Hooks/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/Hooks/ToastContext.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/ToastContainer/Toast/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/utils/getValidatorErros.ts",[],"/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/pages/Dashboard/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/components/Header/index.tsx",[],"/media/keven/Data/www/freelasapp-web/src/components/Header/styles.ts",[],"/media/keven/Data/www/freelasapp-web/src/Routes/Route.tsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":36,"column":6,"nodeType":"122","endLine":36,"endColumn":8,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":83,"column":5,"nodeType":"122","endLine":83,"endColumn":53,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"126","line":60,"column":5,"nodeType":"122","endLine":60,"endColumn":32,"suggestions":"127"},"lines-around-directive",["128"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setValue'. Either include it or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["129"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["130"],"React Hook useCallback has missing dependencies: 'history' and 'login'. Either include them or remove the dependency array.",["131"],"padding-line-between-statements",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [setValue]",{"range":"138","text":"139"},"Update the dependencies array to be: [firstName, lastName, email, password, addToast, history]",{"range":"140","text":"141"},"Update the dependencies array to be: [email, password, login, history, addToast]",{"range":"142","text":"143"},[873,875],"[setValue]",[2752,2800],"[firstName, lastName, email, password, addToast, history]",[1965,1992],"[email, password, login, history, addToast]"]